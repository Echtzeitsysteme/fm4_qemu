name: build
on: [push]
jobs:
  build:
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: /home/runner
    steps:
      - name: Setup environment
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt-get update && apt-get install -y git build-essential ninja-build
          git clone --recurse-submodules https://github.com/xpack/xpack-build-box.git xpack-build-box
          sudo bash xpack-build-box/ubuntu/install-native-xbb-v3.1.sh
          sudo bash xpack-build-box/ubuntu/add-native-extras-xbb-v3.1.sh
          git clone --recurse-submodules https://github.com/xpack-dev-tools/qemu-arm-xpack.git qemu-arm-xpack
          sed -i '65,71d' qemu-arm-xpack/scripts/common-versions-source.sh
      - name: Build qemu
        run: |
          export QEMU_GIT_COMMIT="${GITHUB_SHA}"
          export QEMU_GIT_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git"
          bash qemu-arm-xpack/scripts/build-native.sh --debug --develop
      - name: Package output
        run:  |
          tar -czf /tmp/linux-x64.tar.gz /home/runner/Work/qemu-arm-dev/linux-x64/install/qemu-arm
      - name: Shorten hash
        id: short_sha
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v2.8.0-${{steps.short_sha.outputs.sha8}}"
          release_name: "v2.8.0-${{steps.short_sha.outputs.sha8}}"
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/linux-x64.tar.gz
          asset_name: linux-x64.tar.gz
          asset_content_type: application/gzip